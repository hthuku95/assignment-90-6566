content="from django.urls import path, include\nfrom rest_framework.routers import DefaultRouter\nfrom . import views\n\napp_name = 'payments'\n\n# Create router for viewsets\nrouter = DefaultRouter()\nrouter.register(r'payment-methods', views.PaymentMethodViewSet, basename='payment-methods')\nrouter.register(r'transactions', views.TransactionViewSet, basename='transactions')\n\nurlpatterns = [\n    # Include router URLs\n    path('api/', include(router.urls)),\n    \n    # Stripe-specific endpoints\n    path('api/stripe/create-payment-intent/', views.CreatePaymentIntentView.as_view(), name='create-payment-intent'),\n    path('api/stripe/confirm-payment/', views.ConfirmPaymentView.as_view(), name='confirm-payment'),\n    path('api/stripe/webhook/', views.StripeWebhookView.as_view(), name='stripe-webhook'),\n    path('api/stripe/setup-intent/', views.CreateSetupIntentView.as_view(), name='create-setup-intent'),\n    \n    # Payment processing endpoints\n    path('api/process-payment/', views.ProcessPaymentView.as_view(), name='process-payment'),\n    path('api/refund-payment/', views.RefundPaymentView.as_view(), name='refund-payment'),\n    path('api/payment-status/<str:payment_intent_id>/', views.PaymentStatusView.as_view(), name='payment-status'),\n    \n    # Customer payment methods\n    path('api/customer/payment-methods/', views.CustomerPaymentMethodsView.as_view(), name='customer-payment-methods'),\n    path('api/customer/default-payment-method/', views.SetDefaultPaymentMethodView.as_view(), name='set-default-payment-method'),\n    path('api/customer/delete-payment-method/<str:payment_method_id>/', views.DeletePaymentMethodView.as_view(), name='delete-payment-method'),\n    \n    # Payment history and analytics\n    path('api/payment-history/', views.PaymentHistoryView.as_view(), name='payment-history'),\n    path('api/payment-analytics/', views.PaymentAnalyticsView.as_view(), name='payment-analytics'),\n    \n    # Subscription-related payments (if applicable)\n    path('api/subscriptions/', views.SubscriptionListCreateView.as_view(), name='subscriptions'),\n    path('api/subscriptions/<int:pk>/', views.SubscriptionDetailView.as_view(), name='subscription-detail'),\n    path('api/subscriptions/<int:pk>/cancel/', views.CancelSubscriptionView.as_view(), name='cancel-subscription'),\n    \n    # Invoice management\n    path('api/invoices/', views.InvoiceListView.as_view(), name='invoices'),\n    path('api/invoices/<int:pk>/', views.InvoiceDetailView.as_view(), name='invoice-detail'),\n    path('api/invoices/<int:pk>/download/', views.DownloadInvoiceView.as_view(), name='download-invoice'),\n    \n    # Dispute management\n    path('api/disputes/', views.DisputeListView.as_view(), name='disputes'),\n    path('api/disputes/<str:dispute_id>/', views.DisputeDetailView.as_view(), name='dispute-detail'),\n    path('api/disputes/<str:dispute_id>/respond/', views.RespondToDisputeView.as_view(), name='respond-dispute'),\n]" additional_kwargs={} response_metadata={'id': 'msg_01Du9PMWfUneLn5sA3moAYxL', 'model': 'claude-sonnet-4-20250514', 'stop_reason': 'end_turn', 'stop_sequence': None, 'usage': {'cache_creation_input_tokens': 0, 'cache_read_input_tokens': 0, 'input_tokens': 402, 'output_tokens': 854, 'service_tier': 'standard'}} id='run--a1b8aaa9-6c54-4f3e-9f42-8237159f9f97-0' usage_metadata={'input_tokens': 402, 'output_tokens': 854, 'total_tokens': 1256, 'input_token_details': {'cache_read': 0, 'cache_creation': 0}}