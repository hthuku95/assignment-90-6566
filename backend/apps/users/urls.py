content="from django.urls import path, include\nfrom rest_framework.routers import DefaultRouter\nfrom rest_framework_simplejwt.views import (\n    TokenObtainPairView,\n    TokenRefreshView,\n    TokenVerifyView,\n)\nfrom . import views\n\napp_name = 'users'\n\n# Create a router for ViewSets\nrouter = DefaultRouter()\nrouter.register(r'profiles', views.UserProfileViewSet, basename='profile')\n\nurlpatterns = [\n    # Authentication endpoints\n    path('auth/register/', views.UserRegistrationView.as_view(), name='register'),\n    path('auth/login/', TokenObtainPairView.as_view(), name='login'),\n    path('auth/refresh/', TokenRefreshView.as_view(), name='token_refresh'),\n    path('auth/verify/', TokenVerifyView.as_view(), name='token_verify'),\n    path('auth/logout/', views.UserLogoutView.as_view(), name='logout'),\n    \n    # Password management\n    path('auth/password/change/', views.PasswordChangeView.as_view(), name='password_change'),\n    path('auth/password/reset/', views.PasswordResetView.as_view(), name='password_reset'),\n    path('auth/password/reset/confirm/', views.PasswordResetConfirmView.as_view(), name='password_reset_confirm'),\n    \n    # Email verification\n    path('auth/email/verify/', views.EmailVerificationView.as_view(), name='email_verify'),\n    path('auth/email/resend-verification/', views.ResendEmailVerificationView.as_view(), name='resend_email_verification'),\n    \n    # User profile management\n    path('profile/me/', views.CurrentUserProfileView.as_view(), name='current_user_profile'),\n    path('profile/update/', views.UpdateUserProfileView.as_view(), name='update_profile'),\n    path('profile/avatar/', views.UpdateAvatarView.as_view(), name='update_avatar'),\n    \n    # User account management\n    path('account/deactivate/', views.DeactivateAccountView.as_view(), name='deactivate_account'),\n    path('account/delete/', views.DeleteAccountView.as_view(), name='delete_account'),\n    \n    # Address management\n    path('addresses/', views.UserAddressListCreateView.as_view(), name='address_list_create'),\n    path('addresses/<int:pk>/', views.UserAddressDetailView.as_view(), name='address_detail'),\n    path('addresses/<int:pk>/set-default/', views.SetDefaultAddressView.as_view(), name='set_default_address'),\n    \n    # User preferences\n    path('preferences/', views.UserPreferencesView.as_view(), name='user_preferences'),\n    path('preferences/notifications/', views.NotificationPreferencesView.as_view(), name='notification_preferences'),\n    \n    # Social authentication (optional)\n    path('auth/social/google/', views.GoogleOAuthView.as_view(), name='google_oauth'),\n    path('auth/social/facebook/', views.FacebookOAuthView.as_view(), name='facebook_oauth'),\n    \n    # User activity and history\n    path('activity/', views.UserActivityView.as_view(), name='user_activity'),\n    path('login-history/', views.LoginHistoryView.as_view(), name='login_history'),\n    \n    # Admin-only endpoints\n    path('admin/list/', views.UserListView.as_view(), name='user_list'),\n    path('admin/<int:pk>/', views.UserDetailView.as_view(), name='user_detail'),\n    path('admin/<int:pk>/activate/', views.ActivateUserView.as_view(), name='activate_user'),\n    path('admin/<int:pk>/deactivate/', views.DeactivateUserView.as_view(), name='deactivate_user'),\n    \n    # Two-factor authentication\n    path('2fa/setup/', views.TwoFactorSetupView.as_view(), name='2fa_setup'),\n    path('2fa/verify/', views.TwoFactorVerifyView.as_view(), name='2fa_verify'),\n    path('2fa/disable" additional_kwargs={} response_metadata={'id': 'msg_014xNiS2WLZB7kiDReaDkJVU', 'model': 'claude-sonnet-4-20250514', 'stop_reason': 'max_tokens', 'stop_sequence': None, 'usage': {'cache_creation_input_tokens': 0, 'cache_read_input_tokens': 0, 'input_tokens': 402, 'output_tokens': 1024, 'service_tier': 'standard'}} id='run--87a12557-6cab-4c78-9058-d8a85dcea29a-0' usage_metadata={'input_tokens': 402, 'output_tokens': 1024, 'total_tokens': 1426, 'input_token_details': {'cache_read': 0, 'cache_creation': 0}}